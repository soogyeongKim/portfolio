{"version":3,"sources":["components/GlobalStyles.js","components/Header.js","assets/soo.jpg","components/Main.js","hooks/useFadeIn.js","components/More.js","assets/soo-card.jpeg","components/Contact.js","components/Loader.js","hooks/useLoader.js","routes/Root.js","assets/galaxy.png","hooks/useBlink.js","components/Galaxy.js","assets/sk-main.jpg","assets/sk-qr.jpg","hooks/useBounce.js","components/SKnights.js","assets/string@2x.png","assets/img-rounding@2x.png","assets/viewpager@2x.png","assets/chatting@2x.png","hooks/useWindowSize.js","components/String.js","hooks/useScrollTop.js","routes/Android.js","assets/buskingtown@2x.png","assets/ico-buskingtown@2x.png","components/BuskingTown.js","assets/buskingtownBg2@2x.png","assets/db-erd@2x.png","components/BuskingTownDB.js","assets/buskingtown-side@2x.png","components/BuskingTownServer.js","routes/Server.js","assets/analytics.png","components/XsyncSolution.js","assets/nextrise.jpeg","components/NextRise.js","assets/mac.jpg","assets/iframe@2x.png","components/IFrame.js","routes/Vue.js","assets/coin.mov","components/CoinExplorer.js","assets/superhook.mov","components/UseHooks.js","routes/Reactjs.js","App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","HeaderContainer","styled","header","List","ul","Item","li","NavLink","NavHashLink","withRouter","location","hash","to","activeClassName","activeStyle","borderBottom","smooth","slideIn","keyframes","slideInBottom","MainSection","div","MainContainer","ProfileImg","ProfileTitle","ProfileSubText","p","ProfileText","BoxContainer","StoryBox","Main","props","LazyImage","lazy","id","fallback","src","mainImg","name","useFadeIn","element","useRef","handleView","useCallback","entry","current","isIntersecting","style","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","opacity","transform","useEffect","observer","IntersectionObserver","threshold","observe","disconnect","ref","wobble","MoreContainer","Line","LeftBox","RightBox","popup","DetailBox","Link","$detail","css","Attention","refAndroid","useFadein","refiOS","refServer","refWeb","refReact","ContactSection","section","CardImgBox","ContactContainer","Bar","span","LinkP","Contact","sooCard","href","target","rel","LoaderContainer","bgColor","loader4","Loader4","Loader","useLoader","useState","isLoader","setIsLoader","localStorage","getItem","setTimeout","value","setItem","Root","useAnimation","animate","offset","fill","duration","iterations","easing","XsyncAppSection","XsyncAppContainer","Title","h1","Desc","Img","img","Neon","Xsync","blink","useBlink","blinkImg","galaxy","textAlign","SKnightsSection","SKnightsContainer","BackgroundImgBox","BackgroundImg","DescBox","SKnights","bounce","useBounce","skMain","skQR","useWindowSize","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","cards","title","desc","imgrounding","viewpager","chatting","SSection","ASideimg","SDSection","SDescBox","CardBox","Card","CardTitle","CardImg","String","size","marginLeft","color","map","card","i","marginBottom","split","line","index","useScrollTop","scrollTo","Android","Galaxy","BTSection","BuskingTownBg","IconImg","RightDesc","LongDesc","BuskingTown","BuskingTownIcon","float","buskingTownBg2","BTContainer","DescImg","BuskingTownDB","erd","Border","BuskingTownServer","BsideImg","Server","XsyncSolutionSection","XsyncSolutionContainer","ImgBox","Red","XsyncSolution","analytics","NextRiseSection","NextRiseContainer","Green","NextRise","nextrise","IFrameSection","mac","IFrameContainer","iframe","IFrame","Vue","CoinSection","CoinContainer","Yellow","VideoBox","VideoContent","VideoLoading","ripple","Ripple","CoinExplorer","LazyVideo","Coin","CodeBox","HighlightCode","Highlight","jello","UseHooks","language","superhook","Reactjs","App","listener","event","preventDefault","removeItem","exact","path","component","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dd8425f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    @font-face {\n        //font-family: 'NIXGONM-Vb';\n       //src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_six@1.2/NIXGONM-Vb.woff') format('woff');\n        font-weight: normal;\n        font-style: normal;\n   }\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    body{\n        font-family: 'NIXGONM-Vb', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 1.313rem;\n        overflow-x: hidden;\n        margin: 0;\n    }\n    h1{\n        font-size: 2rem;\n        font-weight: lighter;\n    }\n    p,ul,li{\n        font-size: 1rem;\n        line-height: 2;\n    }\n    table {\n        font-size: 1rem;\n        line-height: 2;\n    }\n    button{\n        all: unset;\n        cursor:pointer;\n    }\n    ::-webkit-scrollbar{\n        display: none; \n        -ms-overflow-style: none; \n        scrollbar-width: none; \n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { NavHashLink } from \"react-router-hash-link\";\n\nfunction Header({ location: { hash } }) {\n  return (\n    <HeaderContainer>\n      <List>\n        <Item>\n          <NavLink\n            to=\"/#Home\"\n            activeClassName=\"selected\"\n            activeStyle={{ borderBottom: \"2px solid #3498db\" }}\n            smooth\n          >\n            Home\n          </NavLink>\n        </Item>\n        <Item>\n          <NavLink\n            to=\"/#Skills\"\n            activeClassName=\"selected\"\n            activeStyle={{ borderBottom: \"2px solid #3498db\" }}\n            smooth\n          >\n            Skills\n          </NavLink>\n        </Item>\n        <Item>\n          <NavLink\n            to=\"/#More\"\n            activeClassName=\"selected\"\n            activeStyle={{ borderBottom: \"2px solid #3498db\" }}\n            smooth\n          >\n            More\n          </NavLink>\n        </Item>\n      </List>\n    </HeaderContainer>\n  );\n}\n\nconst HeaderContainer = styled.header`\n  color: whtie;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 70px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  z-index: 10;\n  background-color: transparent;\n\n  @media only screen and (max-width: 768px) {\n    height: 45px;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n\n  @media only screen and (max-width: 768px) {\n    height: 45px;\n  }\n`;\n\nconst NavLink = styled(NavHashLink)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media only screen and (max-width: 768px) {\n    height: 45px;\n  }\n`;\n\nexport default withRouter(Header);\n","export default __webpack_public_path__ + \"static/media/soo.7633e529.jpg\";","import React, { lazy, Suspense } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport mainImg from \"../assets/soo.jpg\";\n\nfunction Main(props) {\n  const LazyImage = lazy(() => import(\"./LazyImage\"));\n  return (\n    <MainSection id=\"Home\">\n      <MainContainer>\n        <Suspense fallback={<ProfileImg />}>\n          <ProfileImg>\n            <LazyImage src={mainImg} name=\"profileImg\" />\n          </ProfileImg>\n        </Suspense>\n        <ProfileSubText>\n          수경스럽다 : [형용사] 업무를 수행하는 모양새가 똑부러지고 믿음직하다.\n        </ProfileSubText>\n        <ProfileTitle>\n          <h1>안녕하세요.</h1>\n          <h1>빠른 변화를 두려워하지 않는 개발자 김수경입니다.</h1>\n        </ProfileTitle>\n        <ProfileText>\n          코드를 옮겨적는 개발자가 아닌 가장 효율적인 방식으로 사용자를 움직이는\n          프로덕트를 만드는 개발자가 되고싶습니다.\n          <br />\n          <br /> 그 과정에 있어서 우선순위는 프로젝트의 마무리라고 생각합니다.\n          <br />\n          프로젝트를 마무리 하고 그 속에서 본인이 업무를 끝내는데만 급급하지는\n          않았는지, 프로젝트를 진행하는 동안 무엇을 얻었는지 혹은 무엇을\n          잃었는지 생각합니다.\n          <br />\n          스스로의 평가를 토대로 발전하는 것을 좋아합니다.\n        </ProfileText>\n      </MainContainer>\n      <BoxContainer>\n        <StoryBox>\n          <p>\n            💪&nbsp;&nbsp;앞장서서\n            <br />\n            &nbsp;알고 있는 정보를 나누어주는 것을 좋아합니다. 학부생 시절 개발\n            관련 세미나 참석 후에 내용을 친구들에게 전달해주고 싶다는 생각을\n            하였고, 교수님께 발표자리 마련을 요청했습니다. 흔쾌히 수락해주신\n            덕분에 다양한 세미나에 참석 후에는 알게 된 정보를 토대로 자료를\n            정리하여 발표 수업을 진행하였습니다.\n            <br />\n            <br />\n            &nbsp;불필요한 일을 줄이는 것을 좋아합니다. 학부생 시절 약 한달 간의\n            시간이 소요 되는 한양여자대학교의 전체 DB 데이터를 한줄 한줄\n            작성해야하는 작업을 진행해야 했던 적이 있습니다. 교수,학생,직원\n            데이터를 한명씩 입력하는 것은 상당히 불필요한 작업이라고 생각하여\n            Python으로 자동화 프로그램을 만들어 일주일만에 과제를 끝낼 수\n            있었습니다. 만든 프로그램을 혼자서만 사용하지 않고 학급 친구들과\n            함께 사용했습니다.\n          </p>\n        </StoryBox>\n        <StoryBox>\n          <p>\n            ⭐️&nbsp;&nbsp;새로운 도전\n            <br />\n            &nbsp;안드로이드 개발자로 취업하였지만 안드로이드 업무만 진행하지\n            않고 관심 있는 분야의 직무를 경험하고싶어 iOS앱 배포 업무를\n            요청드렸습니다. iOS 앱 배포 업무에 빠르게 적응하여 후에는 UI 버그 등\n            가벼운 이슈는 직접 해결할 수 있었습니다. 이 전 직장의 모바일\n            사업팀이 철수 한 이후에도 CTO님께서 성장가능성을 알아봐주시고는 웹\n            개발 포지션을 제안하였고 프론트엔드 개발자로 포지션을 이동하여\n            실무를 진행할 수 있었습니다.\n            <br />\n            <br />\n            &nbsp;사고를 넓혀 좋은 프로덕트를 생산하고 싶습니다. 배우는 것을\n            좋아합니다. 독일어 학습, 드럼, 영어 학습, 영상 편집, 독서 모임 등\n            꾸준히가 아니더라도 다양한 경험을 하기 위해 노력합니다.\n          </p>\n        </StoryBox>\n        <StoryBox>\n          <p>\n            🤞&nbsp;&nbsp;더 나은 삶\n            <br />\n            &nbsp;개발자라는 직업을 가지고 제 삶 만을 영위하고자 하는 것이 아닌\n            보다 나은 세상을 위해 프로그래밍을 하고 싶다는 생각을 늘 가지고\n            있었기에 JA 코리아에서 주관한 장애인 분들과 함께 하는\n            ‘YouthSparkLive’ 에도 깊은 관심을 가지고 참여했습니다. 장애인 분들과\n            함께 조를 이루어 코드를 작성하고 아두이노를 사용하여 교육생들과\n            게임을 진행하였습니다.\n            <br />\n            <br />\n            &nbsp;건강한 몸, 건강한 정신을 만드는데 노력합니다. 바쁜 직장 생활을\n            보내며 불규칙한 생활 습관을 갖게 되어 불면증을 겪은 적이 있습니다.\n            규칙적인 생활을 찾기 위해 운동을 접하였습니다. 수영으로 스트레스\n            푸는 것을 가장 좋아합니다. 날씨가 좋으면 언제든 등산을 갈 수 있는\n            체력을 가지고 있습니다.\n          </p>\n        </StoryBox>\n      </BoxContainer>\n    </MainSection>\n  );\n}\n\nconst slideIn = keyframes`\n  0% {\n    -webkit-transform: translateY(-600px) rotateX(-30deg) scale(0);\n            transform: translateY(-600px) rotateX(-30deg) scale(0);\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateY(0) rotateX(0) scale(1);\n            transform: translateY(0) rotateX(0) scale(1);\n    -webkit-transform-origin: 50% 1400px;\n            transform-origin: 50% 1400px;\n    opacity: 1;\n  }\n`;\n\nconst slideInBottom = keyframes`\n  0% {\n    -webkit-transform: translateY(1000px);\n            transform: translateY(1000px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nconst MainSection = styled.div`\n  min-width: 90vw;\n  min-height: 100vh;\n  padding: 120px 5vw 0 5vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #cca498;\n\n  @media only screen and (max-width: 768px) {\n    min-height: calc(100vh - 45px);\n    padding-top: 80px;\n  }\n`;\n\nconst MainContainer = styled.div`\n  width: 100%;\n  height: 95%;\n  margin-bottom: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  animation: ${slideIn} 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n`;\n\nconst ProfileImg = styled.div`\n  width: 150px;\n  height: 150px;\n  margin-bottom: 60px;\n  border-radius: 50%;\n  background-color: #939393;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  overflow: hidden;\n`;\n\nconst ProfileTitle = styled.div`\n  margin-bottom: 50px;\n  display: flex;\n\n  & > h1:first-child {\n    margin-right: 16px;\n\n    @media only screen and (max-width: 768px) {\n      margin-bottom: 16px;\n    }\n  }\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ProfileSubText = styled.p`\n  font-size: 1rem;\n  margin-bottom: 50px;\n`;\n\nconst ProfileText = styled.p`\n  margin-bottom: 50px;\n`;\n\nconst BoxContainer = styled.div`\n  width: 80%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin-bottom: 80px;\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StoryBox = styled.div`\n  width: 280px;\n  margin: 20px;\n  padding: 20px 15px;\n  border-radius: 16px;\n  border: 3px solid #444;\n  box-shadow: 2px 3px 8px 1px rgba(0, 0, 0, 0.5);\n  -webkit-animation: ${slideInBottom} 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94)\n    both;\n  animation: ${slideInBottom} 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    margin: 20px 0;\n  }\n`;\n\nexport default Main;\n","import { useEffect, useRef, useCallback } from \"react\";\n\nfunction useFadeIn() {\n  const element = useRef();\n\n  const handleView = useCallback(([entry]) => {\n    const { current } = element;\n    if (entry.isIntersecting) {\n      current.style.transitionProperty = \"opacity transform\";\n      current.style.transitionDuration = \"1s\";\n      current.style.transitionTimingFunction = \"cubic-bezier(0, 0, 0.2, 1)\";\n      current.style.transitionDelay = \"0.2s\";\n      current.style.opacity = 1;\n      current.style.transform = \"translate3d(0, 0, 0)\";\n    }\n  }, []);\n\n  useEffect(() => {\n    let observer;\n    const { current } = element;\n\n    if (current) {\n      observer = new IntersectionObserver(handleView, { threshold: 0.7 });\n      observer.observe(current);\n\n      return () => {\n        observer && observer.disconnect();\n      };\n    }\n  }, [handleView]);\n\n  return {\n    ref: element,\n    style: {\n      opacity: 0,\n      transform: \"translate3d(0, 50%, 0)\",\n    },\n  };\n}\n\nexport default useFadeIn;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport useFadein from \"../hooks/useFadeIn\";\n\nfunction More() {\n  const refAndroid = useFadein();\n  const refiOS = useFadein();\n  const refServer = useFadein();\n  const refWeb = useFadein();\n  const refReact = useFadein();\n  return (\n    <MoreContainer id=\"Skills\">\n      <Line />\n      <LeftBox>\n        <DetailBox {...refAndroid} to=\"/android\" $detail={true}>\n          <p>\n            Android : 안드로이드 프로젝트 생성 부터 배포 까지 경험한 적이\n            있습니다. picasso 라이브러리를 이용한 화면 구현 부터 retrofit을\n            이용한 api 통신 까지 다양한 라이브러리를 적용 할 수 있습니다. xSync,\n            갤럭시 팬파티, SK 나이츠 안드로이드 앱 배포 및 유지보수를\n            진행하였습니다.\n          </p>\n          <Attention>Click Me!</Attention>\n        </DetailBox>\n        <DetailBox {...refiOS} to=\"/ios\" $detail={false}>\n          <p>\n            iOS : SK 나이츠, 그린 플러그드, Next Rise 등 약 100여개의\n            어플리케이션을 배포한 경험이 있습니다.\n          </p>\n        </DetailBox>\n        <DetailBox {...refServer} to=\"/server\" $detail={true}>\n          <p>\n            Server : MVC 패턴을 숙지하여 Python Django의 rest framwork 로 API를\n            구현할 수 있습니다. ERD 작성을 통해 서버의 모델을 구축할 수 있으며\n            데이터 무결성과 검색 비용에 대해 고민합니다.\n          </p>\n          <Attention>Click Me!</Attention>\n        </DetailBox>\n      </LeftBox>\n      <RightBox>\n        <DetailBox {...refWeb} to=\"/vue\" $detail={true}>\n          <p>\n            Web(Vue.js) : Vue.js 프레임워크 기반의 웹서비스를 개발한 적이\n            있습니다. 모든 서비스를 모바일 화면에서도 확인이 가능하게 제작하여\n            반응형 레이아웃에 대한 이해도가 높습니다. SCSS를 사용하여 화면을\n            구현해낼 수 있습니다.\n          </p>\n          <Attention>Click Me!</Attention>\n        </DetailBox>\n        <DetailBox {...refReact} to=\"/react\" $detail={true}>\n          <p>\n            Web(React) : 토이 프로젝트를 통해 react를 학습하였으며 axios, styled\n            components, react router, props-type 등의 라이브러리를 사용한 경험이\n            있습니다. class component 형태의 Container Presenter 패턴에 대해\n            이해하고 있습니다. 또한 react hook을 이용하여 함수형 component를\n            만들어 낼 수 있습니다.\n          </p>\n          <Attention>Click Me!</Attention>\n        </DetailBox>\n      </RightBox>\n    </MoreContainer>\n  );\n}\n\nconst wobble = keyframes`\n  0%,\n  100% {\n    -webkit-transform: translateX(0%);\n            transform: translateX(0%);\n    -webkit-transform-origin: 50% 50%;\n            transform-origin: 50% 50%;\n  }\n  15% {\n    -webkit-transform: translateX(-30px) rotate(-6deg);\n            transform: translateX(-30px) rotate(-6deg);\n  }\n  30% {\n    -webkit-transform: translateX(15px) rotate(6deg);\n            transform: translateX(15px) rotate(6deg);\n  }\n  45% {\n    -webkit-transform: translateX(-15px) rotate(-3.6deg);\n            transform: translateX(-15px) rotate(-3.6deg);\n  }\n  60% {\n    -webkit-transform: translateX(9px) rotate(2.4deg);\n            transform: translateX(9px) rotate(2.4deg);\n  }\n  75% {\n    -webkit-transform: translateX(-6px) rotate(-1.2deg);\n            transform: translateX(-6px) rotate(-1.2deg);\n  }\n`;\n\nconst MoreContainer = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: #fefefe;\n  background-color: #444444;\n\n  @media only screen and (max-width: 768px) {\n    min-height: 100%;\n    height: 100%;\n    padding-top: 55px;\n    flex-direction: column;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n`;\n\nconst Line = styled.div`\n  width: 1px;\n  height: calc(100vh - 70px);\n  background-color: #555555;\n  position: absolute;\n  left: 50%;\n  bottom: 0%;\n  transform: translate-x(-50%);\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst LeftBox = styled.div`\n  flex: 1;\n  min-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-right: 50px;\n\n  @media only screen and (max-width: 768px) {\n    width: 90vw;\n    height: 100%;\n    margin-right: 0;\n    align-items: center;\n    justify-content: space-around;\n  }\n`;\n\nconst RightBox = styled.div`\n  flex: 1;\n  min-height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n\n  @media only screen and (max-width: 768px) {\n    width: 90vw;\n    height: 100%;\n    align-items: center;\n  }\n`;\n\nconst popup = keyframes`\n  0% {\n    transform: translateY(0);\n    transform-origin: 50% 50%;\n    box-shadow: none;\n  }\n  100% {\n    transform: translateY(-50px);\n    transform-origin: 50% 50%;\n    box-shadow:0 40px 20px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst DetailBox = styled(Link)`\n  width: 320px;\n  background-color: #555555;\n  padding: 20px 15px;\n  border-radius: 16px;\n\n  box-shadow: -1px 3px 11px 1px rgba(0, 0, 0, 0.5);\n\n  ${(props) =>\n    props.$detail\n      ? css`\n          border: 3px solid #cca498;\n          cursor: pointer;\n          &:hover {\n            animation: ${popup} 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n            @media only screen and (max-width: 768px) {\n              animation: none;\n            }\n          }\n        `\n      : css`\n          pointer-events: none;\n        `}\n\n  @media only screen and (max-width: 768px) {\n    width: 90%;\n    margin-bottom: 55px;\n  }\n`;\n\nconst Attention = styled.p`\n  position: absolute;\n  bottom: -32px;\n  right: 0;\n  animation: ${wobble} 2s 1s infinite both;\n`;\n\nexport default withRouter(More);\n","export default __webpack_public_path__ + \"static/media/soo-card.58b87c7e.jpeg\";","import React, { lazy, Suspense } from \"react\";\nimport styled from \"styled-components\";\n\nimport sooCard from \"../assets/soo-card.jpeg\";\n\nfunction Contact(props) {\n  const LazyImage = lazy(() => import(\"./LazyImage\"));\n  return (\n    <ContactSection id=\"More\">\n      <Suspense fallback={<CardImgBox />}>\n        <CardImgBox>\n          <LazyImage src={sooCard} name=\"cardImg\" />\n        </CardImgBox>\n      </Suspense>\n      <ContactContainer>\n        <h1>제 이야기가 더 궁금하신가요?</h1>\n        <a\n          href=\"https://www.notion.so/Kim-SooGyeong-93e53e07cc8b4085ab2327811a8241d9\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <LinkP>\n            <Bar>이력서 구경하러가기</Bar>\n          </LinkP>\n        </a>\n        <a\n          href=\"https://github.com/soogyeongKim\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <LinkP>\n            <Bar>Github 구경하러가기</Bar>\n          </LinkP>\n        </a>\n      </ContactContainer>\n    </ContactSection>\n  );\n}\n\nconst ContactSection = styled.section`\n  min-width: 90vw;\n  min-height: 100vh;\n  display: flex;\n  padding: 0 5vw;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #cca498;\n\n  @media only screen and (max-width: 768px) {\n    min-height: calc(100vh - 80px);\n    padding-top: 80px;\n  }\n`;\n\nconst CardImgBox = styled.div`\n  width: 20%;\n  height: 20%;\n  margin-bottom: 80px;\n  border-radius: 50%;\n  background-color: #939393;\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\n  overflow: hidden;\n\n  @media only screen and (max-width: 768px) {\n    width: 50%;\n    height: 50%;\n  }\n`;\n\nconst ContactContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  & > h1 {\n    margin-bottom: 50px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst Bar = styled.span`\n  transition: all 0.2s ease-in-out;\n  position: relative;\n  &:before {\n    content: \"\";\n    position: absolute;\n    width: 0;\n    bottom: -10px;\n    height: 2px;\n    margin: 5px 0 0;\n    transition: $animate;\n    transition-duration: 0.75s;\n    opacity: 0;\n    background-color: #000;\n  }\n`;\n\nconst LinkP = styled.p`\n  margin-bottom: 32px;\n\n  &:hover {\n    & > ${Bar} {\n      &:before {\n        width: 100%;\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport default Contact;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nfunction Loader(props) {\n  return (\n    <LoaderContainer bgColor={props.bgColor}>\n      <Loader4></Loader4>\n    </LoaderContainer>\n  );\n}\n\nconst LoaderContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  text-align: center;\n  background-color: ${(props) => props.bgColor};\n  overflow: hidden;\n  transition: all 0.2s ease;\n\n  & > p {\n    color: #777;\n    font-weight: 300;\n    position: absolute;\n    font-size: 20px;\n    width: 100%;\n    height: 25px;\n    text-align: center;\n    bottom: 0px;\n    margin: 0;\n    top: 160px;\n    background-color: #fff;\n    opacity: 0;\n    text-transform: uppercase;\n    transition: all 0.2s ease;\n  }\n`;\n\nconst loader4 = keyframes`  \n    0%{width: 0px;}\n    70%{width: 100%; opacity: 1;}\n    90%{opacity: 0; width: 100%;}\n    100%{opacity: 0;width: 0px;}\n`;\n\nconst Loader4 = styled.div`\n  position: absolute;\n  width: 150px;\n  height: 20px;\n\n  top: 45%;\n  top: -webkit-calc(50% - 10px);\n  top: calc(50% - 10px);\n  left: 25%;\n  left: -webkit-calc(50% - 75px);\n  left: calc(50% - 75px);\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    background-color: #fff;\n    top: 0px;\n    left: 0px;\n    height: 20px;\n    width: 0px;\n    z-index: 0;\n    opacity: 1;\n    -webkit-transform-origin: 100% 0%;\n    transform-origin: 100% 0%;\n    -webkit-animation: ${loader4} 10s ease-in-out infinite;\n    animation: ${loader4} 10s ease-in-out infinite;\n  }\n\n  &:after {\n    content: \"LOADING ...\";\n    color: #fff;\n    font-weight: 200;\n    font-size: 16px;\n    position: absolute;\n    width: 100%;\n    height: 20px;\n    line-height: 20px;\n    left: 0;\n    top: 0;\n  }\n`;\n\nexport default Loader;\n","import { useState, useEffect } from \"react\";\n\nconst useLoader = () => {\n  const [isLoader, setIsLoader] = useState(true);\n\n  const setLocalFirstVisit = (value) => {\n    localStorage.setItem(\"firstVisit\", value);\n  };\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"firstVisit\") === null ||\n      localStorage.getItem(\"firstVisit\") === \"true\"\n    ) {\n      setIsLoader(true);\n      setTimeout(() => setIsLoader(false), 8000);\n    } else {\n      setIsLoader(false);\n    }\n    return () => {\n      setLocalFirstVisit(\"false\");\n    };\n  }, []);\n  return isLoader;\n};\n\nexport default useLoader;\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport More from \"../components/More\";\nimport Contact from \"../components/Contact\";\nimport Loader from \"../components/Loader\";\nimport useLoader from \"../hooks/useLoader\";\n\nfunction Root(props) {\n  const isLoader = useLoader();\n  return isLoader ? (\n    <>\n      <Loader bgColor=\"#cca498\" />\n    </>\n  ) : (\n    <>\n      <Header />\n      <Main />\n      <More />\n      <Contact />\n    </>\n  );\n}\n\nexport default Root;\n","export default __webpack_public_path__ + \"static/media/galaxy.4d952cc7.png\";","import { useEffect, useRef, useCallback } from \"react\";\n\nfunction useAnimation() {\n  const element = useRef();\n\n  const handleView = useCallback(([entry]) => {\n    const { current } = element;\n    if (entry.isIntersecting) {\n      current.animate(\n        [\n          {\n            offset: 0,\n            opacity: 1,\n          },\n          {\n            offset: 0.5,\n            opacity: 0.2,\n          },\n          {\n            offset: 1,\n            opacity: 1,\n          },\n        ],\n        { fill: \"both\", duration: 900, iterations: 3 }\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    let observer;\n    const { current } = element;\n\n    if (current) {\n      observer = new IntersectionObserver(handleView, { threshold: 1 });\n      observer.observe(current);\n\n      return () => {\n        observer && observer.disconnect();\n      };\n    }\n  }, [handleView]);\n\n  return {\n    ref: element,\n    animate: {\n      offset: 0,\n      transform: \"translateY(-500px)\",\n      easing: \"ease-in\",\n    },\n  };\n}\n\nexport default useAnimation;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport galaxy from \"../assets/galaxy.png\";\nimport useBlink from \"../hooks/useBlink\";\n\nfunction Xsync(props) {\n  const blink = useBlink();\n  const blinkImg = useBlink();\n  return (\n    <XsyncAppSection>\n      <Title>\n        xSync 개별배포 앱 : <Neon {...blink}>Galaxy Note 10 Fan Party </Neon>\n        (Android)\n      </Title>\n      <XsyncAppContainer>\n        <Desc>\n          개발팀 구성(3)\n          <br />\n          안드로이드 개발 2, 서버 1\n          <br />\n          <br />\n          담당업무\n          <br />\n          <Neon>안드로이드 개발, 앱 제작 및 배포</Neon>\n          <br />\n          <br />\n          프로젝트 참여도\n          <br />\n          50%\n        </Desc>\n        <Img {...blinkImg} src={galaxy}></Img>\n        <Desc style={{ textAlign: \"left\" }}>\n          갤럭시 팬파티 어플리케이션은 갤럭시 팬들을 위해 열리는 행사에\n          사용되었습니다. 어플리케이션을 통해 행사에 관련된 정보제공을 하며 서버\n          제어를 통해 안드로이드와 소켓 통신하여 실시간으로 사용자들이 퀴즈에\n          참여할 수 있는 기능이 있습니다.\n          <br />\n          <br />\n          <Neon>\n            많은 참가자들이 동시에 접속해야 하기 때문에 앱을 최대한 가볍게\n            만들고자 하였습니다.\n          </Neon>\n          기존에 존재하던 서버 통신을 최대한 줄이기 위해 서버에서 받아오던\n          이미지, 폰트 컬러, 컨텐츠 등을 하드코딩 하는 풀 커스텀을\n          진행하였습니다.\n        </Desc>\n      </XsyncAppContainer>\n    </XsyncAppSection>\n  );\n}\n\nconst XsyncAppSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #10011a;\n`;\n\nconst XsyncAppContainer = styled.div`\n  width: 90%;\n  min-height: 80vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  position: relative;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 3rem;\n`;\n\nconst Desc = styled.p`\n  width: 30%;\n  margin: 0 20px;\n  line-height: 2rem;\n  color: #fff;\n  word-break: keep-all;\n  text-align: center;\n\n  &:first-child {\n    width: 20%;\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n      margin: 20px 0;\n    }\n  }\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    margin: 20px 0;\n  }\n`;\n\nconst Img = styled.img`\n  width: 30%;\n`;\n\nconst Neon = styled.span`\n  text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #ff00de,\n    0 0 70px #ff00de, 0 0 80px #ff00de, 0 0 100px #ff00de, 0 0 150px #ff00de;\n`;\n\nexport default Xsync;\n","export default __webpack_public_path__ + \"static/media/sk-main.a8ba63b1.jpg\";","export default __webpack_public_path__ + \"static/media/sk-qr.dbba9b82.jpg\";","import { useEffect, useRef, useCallback } from \"react\";\n\nfunction useAnimation() {\n  const element = useRef();\n\n  const handleView = useCallback(([entry]) => {\n    const { current } = element;\n    if (entry.isIntersecting) {\n      current.animate(\n        [\n          {\n            offset: 0.38,\n            transform: \"translateY(0)\",\n            easing: \"ease-out\",\n          },\n          {\n            offset: 0.55,\n            transform: \"translateY(-65px)\",\n            easing: \"ease-in\",\n          },\n          {\n            offset: 0.72,\n            transform: \"translateY(0)\",\n            easing: \"ease-out\",\n          },\n          {\n            offset: 0.81,\n            transform: \"translateY(-28px)\",\n            easing: \"ease-in\",\n          },\n          {\n            offset: 0.9,\n            transform: \"translateY(0)\",\n            easing: \"ease-out\",\n          },\n          {\n            offset: 0.95,\n            transform: \"translateY(-8px)\",\n            easing: \"ease-in\",\n          },\n          {\n            offset: 1,\n            transform: \"translateY(0)\",\n            easing: \"ease-out\",\n          },\n        ],\n        { fill: \"both\", duration: 1100, iterations: 1 }\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    let observer;\n    const { current } = element;\n\n    if (current) {\n      observer = new IntersectionObserver(handleView, { threshold: 0.4 });\n      observer.observe(current);\n\n      return () => {\n        observer && observer.disconnect();\n      };\n    }\n  }, [handleView]);\n\n  return {\n    ref: element,\n    animate: {\n      offset: 0,\n      transform: \"translateY(-500px)\",\n      easing: \"ease-in\",\n    },\n  };\n}\n\nexport default useAnimation;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport skMain from \"../assets/sk-main.jpg\";\nimport skQR from \"../assets/sk-qr.jpg\";\nimport useBounce from \"../hooks/useBounce\";\n\nfunction SKnights(props) {\n  const bounce = useBounce();\n  return (\n    <SKnightsSection>\n      <Title>xSync 개별배포 앱 : Sk Knights (Android, iOS)</Title>\n      <SKnightsContainer>\n        <DescBox>\n          <Desc>\n            개발팀 구성(4) : 안드로이드 개발 2, iOS 개발 2, 서버 1\n            <br />\n            프로젝트 참여도 : 30%\n            <br />\n            <br />\n            담당 업무\n            <br />\n            iOS/안드로이드 서브개발, 앱 제작 및 배포, 앱 사후관리\n          </Desc>\n          <Desc style={{ textAlign: \"left\" }}>\n            SK 나이츠의 농구경기 어플리케이션으로 농구경기 진행 시 다양한 이벤트\n            및 카드섹션, 입장 체크 등의 기능이 있습니다. QR 코드를 통해 입장\n            체크를 진행하는 기능을 개발하였습니다. QR 체크 후 api 통신하여 받아\n            낸 결과 값에 따라 토스트 메세지, 변환 된 이미지를 노출하는 방식으로\n            만들었습니다.\n            <br />\n            <br />\n            많은 유저들의 선택을 받은 이 어플리케이션은 농구경기가 진행 되지\n            않을 때에도 활용도가 높아 스토어에 주기적으로 업데이트 하여\n            유지보수를 진행하였습니다.\n            <br />\n            <br />\n            사후 데이터 관리에도 집중했습니다. 자체 서버로 수집한 데이터(메뉴별\n            클릭 수, 컨텐츠 별 조회 수)와 앱스토어, 플레이스토어에 추적 된\n            데이터(앱다운로드 수, 이탈자 수) 들을 모아 웹으로 통계 페이지를\n            제작하였습니다.\n          </Desc>\n        </DescBox>\n        <BackgroundImgBox {...bounce}>\n          <BackgroundImg src={skMain}></BackgroundImg>\n          <BackgroundImg src={skQR}></BackgroundImg>\n        </BackgroundImgBox>\n      </SKnightsContainer>\n    </SKnightsSection>\n  );\n}\n\nconst SKnightsSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #1c2029;\n  color: #fff;\n`;\n\nconst SKnightsContainer = styled.div`\n  width: calc(90% - 20px);\n  min-height: calc(80vh - 20px);\n  padding: 20px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #fff;\n  color: #000;\n\n  @media only screen and (max-width: 800px) {\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 2.25rem;\n  font-weight: lighter;\n  margin-bottom: 3rem;\n`;\n\nconst BackgroundImgBox = styled.div`\n  width: 60%;\n  max-height: 70vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  @media only screen and (max-width: 800px) {\n    width: 100%;\n    margin: 20px 0;\n  }\n`;\n\nconst BackgroundImg = styled.img`\n  max-width: 40%;\n  object-fit: contain;\n`;\n\nconst DescBox = styled.div`\n  width: 30%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 800px) {\n    width: 100%;\n  }\n`;\nconst Desc = styled.p`\n  text-align: center;\n\n  &:first-child {\n    margin-bottom: 32px;\n  }\n`;\n\nexport default SKnights;\n","export default __webpack_public_path__ + \"static/media/string@2x.4764ff0c.png\";","export default __webpack_public_path__ + \"static/media/img-rounding@2x.4078a342.png\";","export default __webpack_public_path__ + \"static/media/viewpager@2x.8d63941a.png\";","export default __webpack_public_path__ + \"static/media/chatting@2x.473b1096.png\";","import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nexport default useWindowSize;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ASideimg from \"../assets/string@2x.png\";\nimport imgrounding from \"../assets/img-rounding@2x.png\";\nimport viewpager from \"../assets/viewpager@2x.png\";\nimport chatting from \"../assets/chatting@2x.png\";\n\nimport useWindowSize from \"../hooks/useWindowSize\";\n\nconst cards = [\n  {\n    title: \"이미지 라운딩\",\n    desc:\n      \"Picasso 라이브러리를 사용하여\\n배치 되는 이미지들을 원형 및 라운딩 처리\",\n    img: imgrounding,\n  },\n  {\n    title: \"뷰페이저\",\n    desc: \"이미지 별로 점수를 매기면\\n자동으로 다음 이미지로 넘어가는 효과\",\n    img: viewpager,\n  },\n  {\n    title: \"채팅\",\n    desc:\n      \"사용자 메시지의 공백 체크 및\\n리스트뷰와 나인패치를 활용하여 채팅창 구현\",\n    img: chatting,\n  },\n];\n\nfunction String() {\n  const size = useWindowSize();\n  return (\n    <>\n      <SSection>\n        <DescBox\n          style={{\n            marginLeft: \"20px\",\n            width:\n              size.width > size.height\n                ? `${size.width * 0.4}px`\n                : `${size.width * 0.8}px`,\n          }}\n        >\n          <h1>개인 프로젝트 – ‘String’ 소개팅 어플리케이션</h1>\n          <Desc>\n            다른 소개팅 어플리케이션들과 차별점을 두기 위해 20대 회원만 받는\n            방식을 선택했으며, 실사용자가 될 친구들에게 끊임 없는 인터뷰를\n            통하여\n            <br />\n            <span style={{ color: \"#D77D33\" }}>\n              여성의 나이와 남성의 군 제대 여부\n            </span>\n            를 주 매칭 포인트로 잡아 API를 구성하였습니다.\n          </Desc>\n          <Desc>\n            팀 구성(6) : 기획1, 안드로이드 개발2, IOS개발 1, 백엔드 개발2\n          </Desc>\n          <Desc>개발환경 : 안드로이드 스튜디오</Desc>\n          <Desc>\n            담당 업무 :\n            <span style={{ color: \"#D77D33\" }}> 안드로이드 프론트 개발</span>\n            <br />\n            프로토타입 기획 <br />\n            UI/UX 디자인에 따라 모든 레이아웃 구현\n            <br />\n            사용자 시나리오에 맞는 이벤트 구현\n          </Desc>\n          <Desc>\n            처음 접해보는 안드로이드 개발이어서 화면 구성 단을 코드로 만드는\n            것부터 시작하였지만 프로젝트 중반부부터는{\" \"}\n            <span style={{ color: \"#D77D33\" }}>\n              서버에서 전송된 데이터를 가지고 화면을 세팅 하는 일\n            </span>{\" \"}\n            까지 맡을 수 있었습니다. 또한, 팀원들과 원활한 소통을 위해 개발에만\n            몰두하지 않고 목업 디자인, 기획에도 모두 참여하여 협업에 대해\n            이해하는 경험을 할 수 있었습니다.\n          </Desc>\n        </DescBox>\n      </SSection>\n      <SDSection>\n        <SDescBox>\n          <p>\n            디자이너에게 넘겨 받은 화면 그대로 표현하려고 최대한 노력했던 부분들\n            입니다. 1dp의 오차도 나지 않게 디자이너에게 끊임 없이 확인 받으며\n            작업했습니다.\n          </p>\n        </SDescBox>\n        <CardBox>\n          {cards.map((card, i) => (\n            <Card key={`card${i}`}>\n              <span style={{ marginBottom: \"0.625rem\" }}>\n                <CardTitle>{card.title}</CardTitle>\n              </span>\n\n              {card.desc.split(\"\\n\").map((line, index) => (\n                <p key={index}>\n                  {line}\n                  <br />\n                </p>\n              ))}\n              <CardImg src={card.img}></CardImg>\n            </Card>\n          ))}\n        </CardBox>\n      </SDSection>\n    </>\n  );\n}\n\nconst SSection = styled.section`\n  width: 100vw;\n  min-height: 100vh;\n  padding-top: 5vh;\n  position: relative;\n  z-index: 1;\n\n  &:after {\n    background-image: url(${ASideimg});\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 100%;\n    content: \"\";\n    top: 0;\n    left: 0;\n    position: absolute;\n    z-index: -1;\n\n    @media only screen and (max-width: 768px) {\n      opacity: 0.3 !important;\n      filter: alpha(opacity=30);\n    }\n  }\n`;\n\nconst DescBox = styled.div`\n  max-width: 100%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  & > h1 {\n    margin-bottom: 20px;\n  }\n`;\n\nconst Desc = styled.p`\n  margin-bottom: 40px;\n`;\n\nconst SDSection = styled.section`\n  width: 100vw;\n  min-height: 100vh;\n  height: 100%;\n  background-color: #f5f3f6;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst SDescBox = styled.div`\n  min-height: 200px;\n  padding: 0 20px;\n  & > p {\n    position: relative;\n    top: 100px;\n  }\n`;\n\nconst CardBox = styled.div`\n  width: 85%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  @media only screen and (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst Card = styled.div`\n  width: 430px;\n  max-width: 100vw;\n  max-height: 656px;\n  word-break: keep-all;\n  line-height: 2rem;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  margin-top: 50px;\n`;\n\nconst CardTitle = styled.h1`\n  font-size: 1.75rem;\n  font-weight: bold;\n  border-bottom: 3px solid #ffcf35;\n  display: inline;\n`;\n\nconst CardImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport default String;\n","import { useEffect } from \"react\";\n\nfunction useScrollTop() {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return null;\n}\n\nexport default useScrollTop;\n","import React from \"react\";\nimport Galaxy from \"../components/Galaxy\";\nimport SKnights from \"../components/SKnights\";\nimport String from \"../components/String\";\nimport ScrollToTop from \"../hooks/useScrollTop\";\n\nfunction Android(props) {\n  return (\n    <>\n      <ScrollToTop />\n      <Galaxy />\n      <SKnights />\n      <String />\n    </>\n  );\n}\n\nexport default Android;\n","export default __webpack_public_path__ + \"static/media/buskingtown@2x.3148f6c5.png\";","export default __webpack_public_path__ + \"static/media/ico-buskingtown@2x.d87ffd7f.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport BuskingTownBg from \"../assets/buskingtown@2x.png\";\nimport BuskingTownIcon from \"../assets/ico-buskingtown@2x.png\";\n\nfunction BuskingTown(props) {\n  return (\n    <BTSection>\n      <IconImg src={BuskingTownIcon}></IconImg>\n      <h1>개인 프로젝트 – ‘BuskingTown’ 버스킹 플랫폼 어플리케이션</h1>\n      <DescBox>\n        <Desc>\n          버스커 채널을 설립하여 홍보하고 연습실 및 콘서트 장소 대여, 멤버관리\n          등의 서비스를 제공하여 버스커들의 편의를 도모하였습니다.\n          <br />\n          일반 회원은 버스커들이 언제 어디서 공연을 하는지 확인하거나 그들을\n          서포트 하는 방식으로 우리 어플리케이션을 이용 할 수 있습니다.\n        </Desc>\n        <Desc>팀 구성(4) : 백엔드 개발1, 프론트 개발3</Desc>\n        <Desc>개발 환경 : 안드로이드 스튜디오 , 파이참 </Desc>\n        <Desc>\n          <span style={{ float: \"left\" }}>\n            담당 업무 : <span style={{ color: \"#FFCF35\" }}> 백엔드 개발</span>\n            , 안드로이드 프론트 개발, PM\n            <br />\n            어플리케이션 주 기능 기획\n            <br />\n            ERD 작성/ 기획서, WBS, 사용자 시나리오 등 총괄 관리\n            <br />\n            Python Django-rest framework를 활용하여 서버 개발\n          </span>\n        </Desc>\n        <LongDesc>\n          <RightDesc>\n            <p>\n              한양여자대학교 창업경진대회 우수상\n              <br />\n              한양여자대학교 정보경영과 졸업작품전 은상\n              <br />\n              한양여자대학교 캡스톤 디자인 공모전 장려상\n            </p>\n          </RightDesc>\n          <p>\n            그 동안의 모든 경험을 살려 안드로이드 프론트 개발에도 참여 하였으며,\n            수업 시간에 배운 MVC 패턴에 대해 숙지하고\n            <br />\n            Django에서 제공하는 rest framework 라이브러리를 활용하여 객체\n            직렬화를 통해 API를 구현 해냈습니다.\n            <br />\n            안드로이드 클라이언트에서는 retrofit 으로 http 통신을 하여 서버와\n            클라이언트 간의 데이터 통신을 구현하였습니다.\n            <br />\n            역시 처음 접해보는 서버 개발이었지만 유튜브와 여러 API문서들을 적극\n            활용하여 회원가입부터 예약, 랭킹 등의 API를 구현할 수 있었습니다.\n          </p>\n        </LongDesc>\n      </DescBox>\n    </BTSection>\n  );\n}\n\nconst BTSection = styled.section`\n  width: 100vw;\n  min-height: 95vh;\n  padding-top: 5vh;\n  background-image: url(${BuskingTownBg});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  color: #fff;\n  position: relative;\n\n  & > h1 {\n    margin-bottom: 20px;\n    padding-left: 20px;\n  }\n`;\n\nconst DescBox = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst IconImg = styled.img`\n  width: 250px;\n  height: 273x;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Desc = styled.p`\n  margin-bottom: 40px;\n  padding: 0 20px;\n`;\n\nconst RightDesc = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 110%;\n  text-align: right;\n  padding: 0 20px;\n  color: white;\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst LongDesc = styled.div`\n  line-height: 2rem;\n  word-break: keep-all;\n  height: 25%;\n  padding: 5px 20px;\n  background-color: #fff;\n  color: #000;\n  display: flex;\n  align-items: center;\n  position: relative;\n`;\n\nexport default BuskingTown;\n","export default __webpack_public_path__ + \"static/media/buskingtownBg2@2x.d5a4e6ec.png\";","export default __webpack_public_path__ + \"static/media/db-erd@2x.7d4b406e.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport buskingTownBg2 from \"../assets/buskingtownBg2@2x.png\";\nimport erd from \"../assets/db-erd@2x.png\";\n\nfunction BuskingTownDB(props) {\n  return (\n    <BTSection>\n      <BTContainer>\n        <h1>DB 설계</h1>\n        <DescBox>\n          <Desc>\n            서버 개발이 처음이었기 때문에{\" \"}\n            <span>DB설계와 서버 코드가 수정 될 가능성을 모두 염두</span>\n            하여 가장 객체 지향적으로 설계 하려 노력했습니다.\n            <br />\n            <br />\n            <span>데이터 검색 비용을 최소한으로 만들기 위해 고민</span>\n            했습니다. 그 예시로 버스커가 팀으로 이루어져 있을 경우 별도의 팀\n            테이블을 생성 할지에 대해 고민 하였으나 기존의 버스커 테이블에\n            busker_type이라는 속성을 주어 별도의 테이블을 생성 하지 않고도 팀\n            활동을 구분 할 수 있게 하였습니다.\n            <br />\n            <br />\n            <span>DB의 무결성을 유지</span>\n            하기 위하여 클라이언트 측에서도 데이터 유형을 검사하고 예외사항에\n            대비해 서버 측에서 응답을 하지 못하도록 하였습니다.\n            <br />\n            <br /> 또한, 이들의 결과 값을 도출해내기 위해{\" \"}\n            <span>Django의 ORM을 활용</span>\n            하였기에 SQL 없이도 쿼리셋을 반환하여 결과 값 데이터를 얻을 수 있어\n            개발의 생산성을 높일 수 있었습니다.\n          </Desc>\n          <DescImg src={erd}></DescImg>\n        </DescBox>\n      </BTContainer>\n    </BTSection>\n  );\n}\n\nconst BTSection = styled.section`\n  width: 100vw;\n  min-height: 95vh;\n  padding-top: 5vh;\n  background-image: url(${buskingTownBg2});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nconst BTContainer = styled.div`\n  width: 100%;\n  height: 95%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  & > h1 {\n    margin-bottom: 40px;\n    padding-left: 20px;\n  }\n`;\n\nconst DescBox = styled.div`\n  margin: 0 20px;\n  display: flex;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Desc = styled.p`\n  width: 35%;\n  margin-bottom: 40px;\n\n  & > span {\n    color: #352872;\n    font-weight: bold;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n\nconst DescImg = styled.img`\n  width: 60%;\n  object-fit: contain;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n`;\n\nexport default BuskingTownDB;\n","export default __webpack_public_path__ + \"static/media/buskingtown-side@2x.9579be4c.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport BsideImg from \"../assets/buskingtown-side@2x.png\";\n\nfunction BuskingTownServer(props) {\n  return (\n    <BTSection>\n      <DescBox>\n        <h1>백엔드 구현</h1>\n        <Desc>\n          무분별한 버스커의 가입을 막기 위해 최소한의 정보를 받아 관리자의\n          버스커 승인 후 채널이 생성 되며 각종 공연 일정 및 연습실 예약 등의\n          서비스를 이용 할 수 있습니다.\n        </Desc>\n        <Border />\n        <Desc>\n          주 API 목록\n          <br />\n          -랭킹 API ( 게시글의 좋아요 수 + 팔로우하는 사람의 수 + 후원 받은 코인\n          수 )<br />\n          -라이브 중인 공연 위치 안내 API ( 네이버 지도 API를 이용해 공연 중인\n          위치 핀 세팅 )<br />\n          -연습실 및 콘서트 장소 예약, 길거리 공연 예약 API\n          <br />\n          -버스커 회원에게 코인을 후원 하는 API\n          <br />\n          -버스커 회원 팔로우/언팔로우 API\n        </Desc>\n        <Border />\n        <Desc>\n          무분별한 버스커의 가입을 막기 위해 최소한의 정보를 받아 관리자의\n          버스커 승인 후 채널이 생성 되며 각종 공연 일정 및 연습실 예약 등의\n          서비스를 이용 할 수 있습니다.\n        </Desc>\n      </DescBox>\n      <DescImg src={BsideImg} />\n    </BTSection>\n  );\n}\n\nconst BTSection = styled.section`\n  width: 100vw;\n  min-height: 95vh;\n  padding-top: 5vh;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DescBox = styled.div`\n  width: 50%;\n  height: 95%;\n  margin-left: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  & > h1 {\n    margin-bottom: 40px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    margin-right: 20px;\n  }\n`;\n\nconst Desc = styled.p`\n  margin-bottom: 40px;\n`;\n\nconst DescImg = styled.img`\n  width: 50%;\n  max-height: 90vh;\n  object-fit: contain;\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Border = styled.div`\n  border: 1px solid #d9d9d9;\n  margin-bottom: 40px;\n`;\nexport default BuskingTownServer;\n","import React from \"react\";\nimport BuskingTown from \"../components/BuskingTown\";\nimport BuskingTownDB from \"../components/BuskingTownDB\";\nimport BuskingTownServer from \"../components/BuskingTownServer\";\nimport ScrollToTop from \"../hooks/useScrollTop\";\n\nfunction Server(props) {\n  return (\n    <>\n      <ScrollToTop />\n      <BuskingTown />\n      <BuskingTownDB />\n      <BuskingTownServer />\n    </>\n  );\n}\n\nexport default Server;\n","export default __webpack_public_path__ + \"static/media/analytics.214fd3e0.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport analytics from \"../assets/analytics.png\";\n\nfunction XsyncSolution(props) {\n  return (\n    <XsyncSolutionSection>\n      <Title>xSync Admin Web : 랜딩페이지, 통계 조회, 문자 발송</Title>\n      <XsyncSolutionContainer>\n        <ImgBox>\n          <Desc>\n            개발팀 구성(2) : 프론트엔드 개발 1, 서버 1 / 담당업무 :\n            <Red>프론트엔드 개발</Red> / 프로젝트 참여도 : 100%\n          </Desc>\n          <Desc>\n            1. 실사용자들이 접속하는 행사 초대장(티켓)의 의미를 담고 있는{\" \"}\n            <Red>랜딩 페이지</Red>,\n            <br />\n            2. 클라이언트들에게 제공 되는 실사용자들의{\" \"}\n            <Red>데이터 통계 자료 조회 페이지</Red>,\n            <br />\n            3. 엑씽크 사내의 비즈니스팀을 위해 제공 되는{\" \"}\n            <Red>문자 발송 페이지</Red>를 만들었습니다.\n          </Desc>\n          <BackgroundImg src={analytics} />\n        </ImgBox>\n        <DescBox>\n          <Desc>\n            Vue.js 의 Axios 라이브러리를 통해 api 연결을 하였으며 모든 데이터는\n            store 에 저장하여 관리하였습니다. 또한 모든 페이지는{\" \"}\n            <Red>반응형으로 제작</Red>하여 모바일 화면에서도 문제 없이 확인 할\n            수 있도록 만들었습니다.\n          </Desc>\n          <Desc>\n            - 랜딩페이지 <br />\n            랜딩 페이지 기능은 사용자들에게 충분한 의미를 담고 있는 UI/UX를\n            전달하고자 하였습니다. 티켓의 의미를 확실하게 하고자 디자이너와의\n            회의를 통해 border를 찢어지는 티켓 형태로 표현했습니다.\n          </Desc>\n          <Desc>\n            - 데이터 통계 자료 조회 페이지 <br />\n            사용자들의 데이터 수집이 곧 자산이라고 생각하여{\" \"}\n            <Red>기획 회의부터 참여</Red>하였습니다. 비즈니스팀과 함께 실제\n            유의미한 데이터가 무엇일지 생각해보고 당장 적용이 가능한 메뉴 클릭\n            수, 게시글 조회 수 등을 우선 제공하였습니다. 차후에는 사용자들의\n            연령대, 성별 등의 데이터를 수집할 수 있는 방법에 대해\n            고민하였습니다. <Red>Chartjs 라이브러리를 사용</Red>하여 그래프를\n            나타냈으며 기능 제작 시에는 프론트에서 효율적으로 데이터를 노출시킬\n            수 있는 <Red>결과 값 형태를 서버개발자에게 직접 요청</Red>하기도\n            하였습니다.\n          </Desc>\n          <Desc>\n            - 문자 발송 페이지 <br />\n            실사용자들의 이름과 연락처를 저장한 엑셀 파일을 업로드하고 메세지를\n            입력하면 해당 이벤트의 사용자들에게 문자로 안내가 가능한 페이지\n            입니다. 비즈니스팀이 빠르게 업무에 대응 할 수 있도록 심플한 UI/UX와\n            다양한 메세지를 노출하려 노력했습니다. 그 예로 문자 발송 실패 시{\" \"}\n            <Red>\n              다양한 오류 케이스를 비즈니스팀에서 이해하기 쉬운 용어들을 사용해\n              가감 없이 전부 노출\n            </Red>{\" \"}\n            시켰습니다.\n          </Desc>\n        </DescBox>\n      </XsyncSolutionContainer>\n    </XsyncSolutionSection>\n  );\n}\n\nconst XsyncSolutionSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #e6eaef;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 48px;\n`;\n\nconst XsyncSolutionContainer = styled.div`\n  max-width: 100%;\n  min-height: 80vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ImgBox = styled.div`\n  width: 40%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst BackgroundImg = styled.img`\n  width: 80%;\n\n  @media only screen and (max-width: 768px) {\n    margin: 20px 0;\n  }\n`;\n\nconst DescBox = styled.div`\n  width: 40%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Desc = styled.p`\n  margin-bottom: 16px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Red = styled.span`\n  background: linear-gradient(\n    to top,\n    rgba(232, 53, 36, 0.3) 50%,\n    transparent 50%\n  );\n`;\n\nexport default XsyncSolution;\n","export default __webpack_public_path__ + \"static/media/nextrise.1ea2cb5e.jpeg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport nextrise from \"../assets/nextrise.jpeg\";\n\nfunction NextRise(props) {\n  return (\n    <NextRiseSection>\n      <Title>xSync 개별배포 Web : NextRise 2020, seoul</Title>\n      <NextRiseContainer>\n        <DescBox>\n          <Desc>\n            개발팀 구성(3) : 프론트엔드 개발 2, 서버 1\n            <br />\n            <br />\n            담당업무 : 프론트엔드 개발, 웹 제작 및 앱 배포\n            <br />\n            <br />\n            프로젝트 참여도 : 70%\n          </Desc>\n          <Desc>NextRise 2020, seoul의 1:1 MeetUp 기능을 제작하였습니다.</Desc>\n          <Desc>\n            1:1 MeetUp은 사용자들이 NextRise 행사 시작 전 대기업/스타트업에게\n            미팅 요청을 하고 성사가 된 <Green>본인의 미팅 스케줄을 조회</Green>\n            하는 기능입니다. 전체 서비스는 로그인 없이 이용이 가능하지만, 1:1\n            MeetUp 페이지는 로그인이 필요한 기능이였기에{\" \"}\n            <Green>페이지 진입 시 유저 토큰 유무를 체크</Green>하여 상황에 맞는\n            컴포넌트를 노출 시켰습니다.\n          </Desc>\n          <Desc>\n            빠른 시일 내에 화려한 UI를 구현해내야했기에 앞서 사용경험이 있던{\" \"}\n            <Green>\n              Chartjs 라이브러리를 사용하여 타임테이블 형태의 화면을 구현\n            </Green>\n            했습니다. 제공되는 라이브러리와 다르게 사용자에 따라, 날짜에 따라\n            y축의 최소값과 최대값이 변경 되는 형태였습니다. api에서 받아오는\n            날짜의 시간을 타임스탬프로 변환하여 정수로 계산한 뒤 다시 시간으로\n            변환하여 화면에 노출 시키는 작업을 진행했습니다. 조금 번거로운\n            작업이기에 라이브러리를 사용하지 않고 직접 화면을 구현 할 수도\n            있었지만 프로젝트 기한 내에 많은 효과를 내기 위한 선택이였습니다.\n          </Desc>\n        </DescBox>\n        <BackgroundImg src={nextrise} />\n      </NextRiseContainer>\n    </NextRiseSection>\n  );\n}\n\nconst NextRiseSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 48px;\n`;\n\nconst NextRiseContainer = styled.div`\n  max-width: 100%;\n  min-height: 80vh;\n  display: flex;\n  justify-content: space-around;\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst BackgroundImg = styled.img`\n  max-width: 30%;\n  max-height: 70%;\n  object-fit: contain;\n\n  @media only screen and (max-width: 768px) {\n    max-width: 60%;\n    margin: 0 auto;\n  }\n`;\n\nconst DescBox = styled.div`\n  width: 50%;\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Desc = styled.p`\n  @media only screen and (max-width: 768px) {\n    margin-bottom: 32px;\n  }\n`;\n\nconst Green = styled.span`\n  background: linear-gradient(\n    to top,\n    rgba(4, 253, 2, 0.3) 50%,\n    transparent 50%\n  );\n`;\n\nexport default NextRise;\n","export default __webpack_public_path__ + \"static/media/mac.d9b9c927.jpg\";","export default __webpack_public_path__ + \"static/media/iframe@2x.f18f1303.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport mac from \"../assets/mac.jpg\";\nimport iframe from \"../assets/iframe@2x.png\";\n\nfunction IFrame(props) {\n  return (\n    <IFrameSection>\n      <Title>xSync 개별배포 Web : iframe (PPI,KCON THAILAND 2020..)</Title>\n      <IFrameContainer>\n        <Desc>\n          엑씽크에서 제공되는 서비스 중 엑씽크 플랫폼에 다른 프로젝트가\n          노출되어야 하는 경우가 있었습니다. 주로 youtube나 비디오형태의\n          웹페이지였습니다. youtube와 같이 라이브러리가 존재하는 경우에는 우선\n          프로젝트의 규모에 따라 라이브러리 사용 유무를 결정하였습니다.\n          프로젝트의 규모가 크지 않고 주어진 개발 기간이 충분하지 않다면\n          iframe을 사용하여 우선 노출 시켰습니다. 이런 상황이 아니라면\n          정보수집을 완료한 후 경험이 많은 개발팀원에게 사용경험, 장단점을 묻고\n          적합한지 판단 한 후 iframe이 아닌 제공되는 라이브러리를\n          사용하였습니다. 단순히 iframe 노출만이 아닌 iframe과 parent window의\n          cookie 값을 postMessage 이벤트로 공유한 경험도 있습니다.\n        </Desc>\n      </IFrameContainer>\n    </IFrameSection>\n  );\n}\n\nconst IFrameSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-image: url(${mac});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 48px;\n`;\n\nconst IFrameContainer = styled.div`\n  min-height: 80vh;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-image: url(${iframe});\n  background-size: 70% 90%;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  @media only screen and (max-width: 768px) {\n    background-size: calc(100% + 50px) 100%;\n    overflow: auto;\n  }\n`;\n\nconst Desc = styled.p`\n  width: 60%;\n  @media only screen and (max-width: 768px) {\n    width: 90%;\n    height: 60vh;\n    overflow: auto;\n  }\n`;\n\nexport default IFrame;\n","import React from \"react\";\nimport ScrollToTop from \"../hooks/useScrollTop\";\nimport XsyncSolution from \"../components/XsyncSolution\";\nimport NextRise from \"../components/NextRise\";\nimport IFrame from \"../components/IFrame\";\n\nfunction Vue(props) {\n  return (\n    <>\n      <ScrollToTop />\n      <XsyncSolution />\n      <NextRise />\n      <IFrame />\n    </>\n  );\n}\n\nexport default Vue;\n","export default __webpack_public_path__ + \"static/media/coin.b3c429ab.mov\";","import React, { lazy, Suspense } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Coin from \"../assets/coin.mov\";\n\nfunction CoinExplorer() {\n  const LazyVideo = lazy(() => import(\"./LazyVideo\"));\n  return (\n    <CoinSection>\n      <h1>\n        토이 프로젝트 - Coin Explorer : 중첩 라우팅, Container Presenter 패턴,\n        함수형 컴포넌트 변환\n      </h1>\n      <p>\n        (중첩 라우팅,Container Presenter 패턴을 사용한 부분만 작성하였습니다.)\n      </p>\n      <CoinContainer>\n        <DescBox>\n          <p>프로젝트 구조 </p>\n          <p>📁 src</p>\n          <ul>\n            <List>\n              📁 Components\n              <ul>\n                <List>App.js</List>\n                <List>Coin.js</List>\n                <List>CoinDetail.js</List>\n                <List>Market.js</List>\n                <List>Header.js</List>\n                <List>Loader.js</List>\n                <List>Router.js</List>\n              </ul>\n            </List>\n            <List>\n              📁 Routes\n              <ul>\n                <List>\n                  📁 Markets\n                  <ul>\n                    <List>MarketsContainer.js</List>\n                    <List>MarketsPresenter.js</List>\n                    <List>index.js</List>\n                  </ul>\n                </List>\n              </ul>\n            </List>\n            <List>\n              📁 Screens\n              <ul>\n                <List>\n                  📁 CoinDetail\n                  <ul>\n                    <List>CoinDetailContainer.js</List>\n                    <List>CoinDetailPresenter.js</List>\n                    <List>index.js</List>\n                  </ul>\n                </List>\n              </ul>\n            </List>\n            <List>api.js</List>\n            <List>index.js</List>\n          </ul>\n        </DescBox>\n        <VideoBox>\n          <Suspense\n            fallback={\n              <VideoLoading>\n                <Ripple>\n                  <div />\n                  <div />\n                </Ripple>\n                <p>Loading..</p>\n              </VideoLoading>\n            }\n          >\n            <VideoContent>\n              <LazyVideo src={Coin} />\n            </VideoContent>\n          </Suspense>\n          <p>\n            <Yellow>암호화폐 관련 정보를 나타내는 React 토이 프로젝트</Yellow>{\" \"}\n            입니다. coinpaprika api를 이용하였습니다. react router 의 match url\n            값을 가져와 중첩라우팅을 구현했습니다. react의 Container Presenter\n            디자인 패턴을 사용하여 데이터 처리와 데이터 출력화면을 나누었습니다.\n            class component 사용법을 숙지 후 react hook을 이용하여 funtion\n            component로 리팩토링 하는 연습도 진행하였습니다.\n          </p>\n          <p>\n            <a\n              href=\"https://github.com/soogyeongKim/react_2weeks/tree/master/nested-routing\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              👉 nested-routing 코드 보러가기\n            </a>\n          </p>\n          <p>\n            <a\n              href=\"https://github.com/soogyeongKim/react_2weeks/tree/master/nested-routing\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              👉 함수형 컴포넌트로 리팩토링한 코드 보러가기\n            </a>\n          </p>\n        </VideoBox>\n      </CoinContainer>\n    </CoinSection>\n  );\n}\n\nconst CoinSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n\n  & > h1 {\n    margin-bottom: 20px;\n  }\n`;\n\nconst CoinContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nconst DescBox = styled.div`\n  width: auto;\n  min-height: 80vh;\n`;\n\nconst List = styled.li`\n  margin-left: 30px;\n`;\n\nconst Yellow = styled.span`\n  background-color: rgba(241, 196, 15, 0.5);\n`;\n\nconst VideoBox = styled.div`\n  width: 60%;\n  margin: 0 auto;\n\n  & > p {\n    margin-bottom: 20px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nconst VideoContent = styled.div`\n  width: 100%;\n  height: 60vh;\n  border-bottom: 1px solid #10011a;\n  margin-bottom: 20px;\n`;\n\nconst VideoLoading = styled.div`\n  width: 100%;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > p {\n    color: #555;\n    margin-top: 12px;\n  }\n`;\n\nconst ripple = keyframes`\n  0% {\n    top: 36px;\n    left: 36px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: 0px;\n    left: 0px;\n    width: 72px;\n    height: 72px;\n    opacity: 0;\n  }\n`;\n\nconst Ripple = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n\n  & > div {\n    position: absolute;\n    border: 4px solid #555;\n    opacity: 1;\n    border-radius: 50%;\n    animation: ${ripple} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n\n    &:nth-child(2) {\n      animation-delay: -0.5s;\n    }\n  }\n`;\nexport default CoinExplorer;\n","export default __webpack_public_path__ + \"static/media/superhook.8107d0c7.mov\";","import React, { lazy, Suspense } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Highlight from \"react-highlight.js\";\nimport superhook from \"../assets/superhook.mov\";\n\nfunction UseHooks() {\n  const LazyVideo = lazy(() => import(\"./LazyVideo\"));\n  return (\n    <CoinSection>\n      <h1>토이 프로젝트 - Infinite Loading hook, Superhooks! </h1>\n      <CoinContainer>\n        <CodeBox>\n          <Attention>Scroll Me!</Attention>\n          <HighlightCode language=\"javascript\">\n            {\n              'import React, { useEffect, useState } from \"react\";\\nimport { getMovies } from \"./api\";\\nimport uniqBy from \"lodash.uniqby\";\\nimport ReactDOM from \"react-dom\";\\n\\nimport \"./styles.css\";\\n\\nfunction InfiniteList() {\\n\\tconst [movies, setMovies] = useState([]);\\n\\tconst [loading, setLoading] = useState(true);\\n\\tconst [page, setPage] = useState(1);\\n\\n\\tconst onScroll = () => {\\n\\t\\tif (isBottom()) {\\n\\t\\t\\tsetPage(page + 1);\\n\\t\\t}\\n\\t};\\n\\n\\tconst isBottom = () => {\\n\\t\\treturn (\\n\\t\\t\\tdocument.documentElement.scrollTop +\\n\\t\\t\\tdocument.documentElement.clientHeight ===\\n\\t\\t\\tdocument.documentElement.scrollHeight\\n\\t\\t);\\n\\t};\\n\\n\\tconst getFristData = async () => {\\n\\t\\ttry {\\n\\t\\t\\tconst { data: { data: { movies } } } = await getMovies(page);\\n\\t\\t\\tsetMovies(movies);\\n\\t\\t} catch (e) {\\n\\t\\t\\tconsole.log(e);\\n\\t\\t} finally {\\n\\t\\t\\tsetLoading(false);\\n\\t\\t}\\n\\t};\\n\\n\\tconst getMoreData = async () => {\\n\\t\\ttry {\\n\\t\\t\\tconst {\\n\\t\\t\\t\\tdata: {\\n\\t\\t\\t\\t\\tdata: { movies: newMovies },\\n\\t\\t\\t\\t},\\n\\t\\t\\t} = await getMovies(page);\\n\\t\\t\\tconst uniqueMovies = [...movies, ...newMovies];\\n\\t\\t\\tsetMovies(uniqBy(uniqueMovies, \"id\"));\\n\\t\\t} catch (e) {\\n\\t\\t\\tonsole.log(e);\\n\\t\\t}\\n\\t};\\n\\n\\tuseEffect(() => {\\n\\t\\tgetFristData();\\n\\t\\twindow.addEventListener(\"scroll\", onScroll);\\n\\t\\treturn () => window.removeEventListener(\"scroll\", onScroll);\\n\\t}, []);\\n\\tuseEffect(() => {\\n\\t\\tgetMoreData();\\n\\t\\twindow.addEventListener(\"scroll\", onScroll);\\n\\t\\treturn () => window.removeEventListener(\"scroll\", onScroll);\\n\\t}, [page]);\\n\\n\\treturn { loading, page, movies };\\n}\\n\\nfunction App() {\\n\\tconst { loading, page, movies } = InfiniteList();\\n\\treturn (\\n\\t\\t<div className=\"App\">\\n\\t\\t\\t<h1>Infinite Movies / Page {page}</h1>\\n\\t\\t\\t{loading && <h3>Loading...</h3>}\\n\\t\\t\\t {movies.map((movie) => (\\n\\t\\t\\t\\t  <h3 key={movie.id}>{movie.title}</h3>\\n\\t\\t\\t ))}\\n\\t\\t  </div>\\n\\t);\\n}\\nconst rootElement = document.getElementById(\"root\");\\nReactDOM.render(<App />, rootElement);'\n            }\n          </HighlightCode>\n          <p>(Infinite Loading)</p>\n          <p>\n            페이지네이션을 사용한 무한 스크롤 기능을 react hook으로\n            구현하였습니다. scroll bottom을 체크하여 페이지 수를 늘려줬으며\n            페이지가 변할 때 영화 리스트 api를 호출 할 수 있게 dependency를\n            설정하였습니다. YTS 에서 제공하는 영화리스트 api를 사용하였습니다.\n          </p>\n        </CodeBox>\n        <VideoBox>\n          <Suspense\n            fallback={\n              <VideoLoading>\n                <Ripple>\n                  <div />\n                  <div />\n                </Ripple>\n                <p>Loading..</p>\n              </VideoLoading>\n            }\n          >\n            <VideoContent>\n              <LazyVideo src={superhook} />\n            </VideoContent>\n          </Suspense>\n          <p>(Superhooks)</p>\n          <p>다양한 Web API를 활용하여 8개의 react hook을 만들었습니다.</p>\n          <p>\n            <a\n              href=\"https://github.com/soogyeongKim/react_2weeks/tree/master/changeHooks\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              👉 react hook 코드 보러가기\n            </a>\n          </p>\n        </VideoBox>\n      </CoinContainer>\n    </CoinSection>\n  );\n}\n\nconst CoinSection = styled.section`\n  width: calc(100vw - 40px);\n  min-height: 90vh;\n  padding: 5vh 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  & > h1 {\n    margin-bottom: 42px;\n  }\n`;\n\nconst CoinContainer = styled.div`\n  width: 100%;\n  min-height: 80vh;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CodeBox = styled.div`\n  width: 40%;\n  min-height: 60vh;\n  font-size: 1rem;\n  position: relative;\n\n  & > p {\n    margin-bottom: 20px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nconst HighlightCode = styled(Highlight)`\n  & > code {\n    height: calc(60vh - 1rem);\n  }\n\n  @media only screen and (max-width: 768px) {\n    height: 60vh;\n  }\n`;\n\nconst VideoBox = styled.div`\n  width: 40%;\n  height: 60vh;\n\n  & > p {\n    margin-bottom: 20px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    height: auto;\n    background-color: transparent;\n  }\n`;\n\nconst VideoContent = styled.div`\n  width: 100%;\n  height: 60vh;\n`;\n\nconst VideoLoading = styled.div`\n  width: 100%;\n  height: 60vh;\n  background-color: #cca498;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n\n  & > p {\n    color: #fff;\n    margin-top: 12px;\n  }\n`;\n\nconst ripple = keyframes`\n  0% {\n    top: 36px;\n    left: 36px;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: 0px;\n    left: 0px;\n    width: 72px;\n    height: 72px;\n    opacity: 0;\n  }\n`;\n\nconst Ripple = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n\n  & > div {\n    position: absolute;\n    border: 4px solid #fff;\n    opacity: 1;\n    border-radius: 50%;\n    animation: ${ripple} 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n\n    &:nth-child(2) {\n      animation-delay: -0.5s;\n    }\n  }\n`;\n\nconst jello = keyframes`\n  0% {\n    -webkit-transform: scale3d(1, 1, 1);\n            transform: scale3d(1, 1, 1);\n  }\n  30% {\n    -webkit-transform: scale3d(1.25, 0.75, 1);\n            transform: scale3d(1.25, 0.75, 1);\n  }\n  40% {\n    -webkit-transform: scale3d(0.75, 1.25, 1);\n            transform: scale3d(0.75, 1.25, 1);\n  }\n  50% {\n    -webkit-transform: scale3d(1.15, 0.85, 1);\n            transform: scale3d(1.15, 0.85, 1);\n  }\n  65% {\n    -webkit-transform: scale3d(0.95, 1.05, 1);\n            transform: scale3d(0.95, 1.05, 1);\n  }\n  75% {\n    -webkit-transform: scale3d(1.05, 0.95, 1);\n            transform: scale3d(1.05, 0.95, 1);\n  }\n  100% {\n    -webkit-transform: scale3d(1, 1, 1);\n            transform: scale3d(1, 1, 1);\n  }\n`;\n\nconst Attention = styled.p`\n  position: absolute;\n  top: -32px;\n  left: 0;\n  animation: ${jello} 5s infinite both;\n`;\nexport default UseHooks;\n","import React from \"react\";\nimport ScrollToTop from \"../hooks/useScrollTop\";\nimport CoinExplorer from \"../components/CoinExplorer\";\nimport UseHooks from \"../components/UseHooks\";\n\nfunction Reactjs(props) {\n  return (\n    <>\n      <ScrollToTop />\n      <CoinExplorer />\n      <UseHooks />\n    </>\n  );\n}\n\nexport default Reactjs;\n","import { HashRouter as Router, Route } from \"react-router-dom\";\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport Root from \"./routes/Root\";\nimport Android from \"./routes/Android\";\nimport Server from \"./routes/Server\";\nimport Vue from \"./routes/Vue\";\nimport Reactjs from \"./routes/Reactjs\";\nimport React, { useEffect } from \"react\";\n\nfunction App() {\n  const listener = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(\"firstVisit\");\n  };\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", listener);\n  });\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Root} />\n      <Route path=\"/android\" component={Android} />\n      <Route path=\"/server\" component={Server} />\n      <Route path=\"/vue\" component={Vue} />\n      <Route path=\"/react\" component={Reactjs} />\n      <GlobalStyles />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}